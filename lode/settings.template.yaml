# yaml config for qortal
#
# Which section is loaded:
#active_section_name: example
active_section_name: lite

#placeholder

lite:
  lite: true
  uPnPEnabled: false
  apiWhitelist:
    - 127.0.0.1
  minPeerVersion: 4.0.0
  allowConnectionsWithOlderPeerVersions: false

lite_plus:
  apiDocumentationEnabled: true
  uPnPEnabled: false
  apiWhitelist:
    - 127.0.0.1
  lite: true
#  topOnly: true
#  archiveEnabled: false
  minPeerVersion: 4.0.0
  allowConnectionsWithOlderPeerVersions: false
  listenPort: 12592

# example section:
example:
  apiDocumentationEnabled: true
  apiWhitelist:
    - 127.0.0.1
    - 10.6.2.0/24
    - 10.2.1.0/24
  bindAddress: 10.6.2.31
  uPnPEnabled: false
#
# Default section with comments, generated from source file Settings.java:
# Not everything here is kosher. Use with caution ...
# It is suggested to leave the default section unmodified and use another section for your changes. 
default:
  ## Settings, and other config files:
  userPath: ''
  ## {  Common to all networking (API/P2P):
  bindAddress: '::' # Use IPv6 wildcard to listen on all local addresses
  bindAddressFallback: 0.0.0.0 # Some systems are unable to bind using IPv6
  # }
  ## {  UI servers:
  uiPort: 12388
  uiLocalServers: # |||| list ||||
    - localhost
    - 127.0.0.1
  uiRemoteServers: # |||| list ||||
    - node1.qortal.org
    - node2.qortal.org
    - node3.qortal.org
    - node4.qortal.org
    - node5.qortal.org
    - node6.qortal.org
    - node7.qortal.org
    - node8.qortal.org
    - node9.qortal.org
    - node10.qortal.org
  # }
  ## {  API-related:
  apiEnabled: true
  apiPort: 12391
  apiWhitelist: # |||| list ||||
    - ::1
    - 127.0.0.1
  # }
  ## Legacy API key (deprecated Nov 2021). Use /admin/apikey/generate API endpoint instead:
  apiKey: null
  ## Storage location for API key generated by API (Nov 2021 onwards):
  apiKeyPath: ''
  ## {  Whether to allow automatic authentication from localhost (loopback) addresses:
  localAuthBypassEnabled: false
  apiRestricted: false
  apiLoggingEnabled: false
  apiDocumentationEnabled: false
  # }
  ## {  Both of these need to be set for API to use SSL:
  sslKeystorePathname: null
  sslKeystorePassword: null
  # }
  ## {  Domain mapping:
  domainMapPort: 80
  domainMapEnabled: false
  domainMapLoggingEnabled: false
  domainMap: { } # |||| list ||||
  # }
  ## {  Gateway:
  gatewayPort: 80
  gatewayEnabled: false
  gatewayLoggingEnabled: false
  gatewayLoopbackEnabled: false
  # }
  ## Specific to this node:
  wipeUnconfirmedOnStart: false
  ## Maximum number of unconfirmed transactions allowed per account:
  maxUnconfirmedPerAccount: 25
  ## Max milliseconds into future for accepting new, unconfirmed transactions:
  maxTransactionTimestampFuture: 1800000 # milliseconds
  ## Maximum number of CHAT transactions allowed per account in recent timeframe:
  maxRecentChatMessagesPerAccount: 250
  ## Maximum age of a CHAT transaction to be considered 'recent':
  recentChatMessagesMaxAge: 3600000 # milliseconds
  ## Whether we check, fetch and install auto-updates:
  autoUpdateEnabled: true
  ## How long between repository backups (ms), or 0 if disabled.:
  repositoryBackupInterval: 0 # ms
  ## Whether to show a notification when we backup repository.:
  showBackupNotification: false
  ## Minimum time between repository maintenance attempts (ms):
  repositoryMaintenanceMinInterval: 259200000 # 3 days (ms) default
  ## Maximum time between repository maintenance attempts (ms) (0 if disabled).:
  repositoryMaintenanceMaxInterval: 1209600000 # 14 days (ms) default
  ## Whether to show a notification when we run scheduled maintenance.:
  showMaintenanceNotification: false
  ## How long between repository checkpoints (ms).:
  repositoryCheckpointInterval: 3600000 # 1 hour (ms) default
  ## Whether to show a notification when we perform repository 'checkpoint'.:
  showCheckpointNotification: false
  ## How many blocks to cache locally. Defaulted to 10, which covers a typical Synchronizer request + a few spare:
  blockCacheSize: 10
  ## How long to keep old, full, AT state data (ms).:
  atStatesMaxLifetime: 432000000 # milliseconds
  ## How often to attempt AT state trimming (ms).:
  atStatesTrimInterval: 5678 # milliseconds
  ## Block height range to scan for trimmable AT states.:
  ## This has a significant effect on execution time.:
  atStatesTrimBatchSize: 100 # blocks
  ## Max number of AT states to trim in one go.:
  atStatesTrimLimit: 4000 # records
  ## How often to attempt online accounts signatures trimming (ms).:
  onlineSignaturesTrimInterval: 9876 # milliseconds
  ## Block height range to scan for trimmable online accounts signatures.:
  ## This has a significant effect on execution time.:
  onlineSignaturesTrimBatchSize: 100 # blocks
  ## Lite nodes don't sync blocks, and instead request "derived data" from peers:
  lite: false
  ## Whether we should prune old data to reduce database size:
  ## This prevents the node from being able to serve older blocks:
  topOnly: false
  ## The amount of recent blocks we should keep when pruning:
  pruneBlockLimit: 6000
  ## How often to attempt AT state pruning (ms).:
  atStatesPruneInterval: 3219 # milliseconds
  ## Block height range to scan for prunable AT states.:
  ## This has a significant effect on execution time.:
  atStatesPruneBatchSize: 25 # blocks
  ## How often to attempt block pruning (ms).:
  blockPruneInterval: 3219 # milliseconds
  ## Block height range to scan for prunable blocks.:
  ## This has a significant effect on execution time.:
  blockPruneBatchSize: 10000 # blocks
  ## Whether we should archive old data to reduce the database size:
  archiveEnabled: true
  ## How often to attempt archiving (ms).:
  archiveInterval: 7171 # milliseconds
  ## Serialization version to use when building an archive:
  defaultArchiveVersion: 1
  ## Whether to automatically bootstrap instead of syncing from genesis:
  bootstrap: true
  ## Registered names integrity check:
  namesIntegrityCheckEnabled: false
  ## Peer-to-peer related:
  isTestNet: false
  ## Single node testnet mode:
  singleNodeTestnet: false
  ## Port number for inbound peer-to-peer connections.:
  listenPort: 12392
  ## Whether to attempt to open the listen port via UPnP:
  uPnPEnabled: true
  ## Minimum number of peers to allow block minting / synchronization.:
  minBlockchainPeers: 5
  ## Target number of outbound connections to peers we should make.:
  minOutboundPeers: 16
  ## Maximum number of peer connections we allow.:
  maxPeers: 36
  ## Number of slots to reserve for short-lived QDN data transfers:
  maxDataPeers: 4
  ## Maximum number of threads for network engine.:
  maxNetworkThreadPoolSize: 32
  ## Maximum number of threads for network proof-of-work compute, used during handshaking.:
  networkPoWComputePoolSize: 2
  ## Maximum number of retry attempts if a peer fails to respond with the requested data:
  maxRetries: 2
  ## Minimum peer version number required in order to sync with them:
  minPeerVersion: 3.8.7
  ## Whether to allow connections with peers below minPeerVersion:
  ## If true, we won't sync with them but they can still sync with us, and will show in the peers list:
  ## If false, sync will be blocked both ways, and they will not appear in the peers list:
  allowConnectionsWithOlderPeerVersions: true
  ## Minimum time (in seconds) that we should attempt to remain connected to a peer fo:
  minPeerConnectionTime: 3600 # seconds
  ## Maximum time (in seconds) that we should attempt to remain connected to a peer fo:
  maxPeerConnectionTime: 14400 # seconds
  ## Maximum time (in seconds) that a peer should remain connected when requesting QDN data:
  maxDataPeerConnectionTime: 120 # seconds
  ## Whether to sync multiple blocks at once in normal operation:
  fastSyncEnabled: true
  ## Whether to sync multiple blocks at once when the peer has a different chain:
  fastSyncEnabledWhenResolvingFork: true
  ## Maximum number of blocks to request at once:
  maxBlocksPerRequest: 100
  ## Maximum number of blocks this node will serve in a single response:
  maxBlocksPerResponse: 200
  ## Which blockchains this node is running:
  blockchainConfig: null # use default from resources
  ## Also crosschain-related::
  ## Whether to show SysTray pop-up notifications when trade-bot entries change state:
  tradebotSystrayEnabled: false
  ## {  Wallets path - used for storing encrypted wallet caches for coins that require them:
  walletsPath: wallets
  arrrDefaultBirthday: 2000000
  # }
  ## Repository related:
  ## Queries that take longer than this are logged. (milliseconds):
  slowQueryThreshold: null
  ## Repository storage path.:
  repositoryPath: db
  ## {  Repository connection pool size. Needs to be a bit bigger than maxNetworkThreadPoolSize:
  repositoryConnectionPoolSize: 100
  fixedNetwork: [ ] # |||| list ||||
  # }
  ## Export/import:
  exportPath: qortal-backup
  ## Bootstrap:
  bootstrapFilenamePrefix: ''
  ## Bootstrap sources:
  bootstrapHosts: # |||| list ||||
    - http://bootstrap.qortal.org
    - http://bootstrap2.qortal.org
    - http://bootstrap3.qortal.org
    - http://bootstrap.qortal.online
  ## Auto-update sources:
  autoUpdateRepos: # |||| list ||||
    - https://github.com/Qortal/qortal/raw/%s/qortal.update
    - https://raw.githubusercontent.com@151.101.16.133/Qortal/qortal/%s/qortal.update
  ## Lists:
  listsPath: lists
  ## Array of NTP server hostnames.:
  ntpServers: # |||| list ||||
    - pool.ntp.org
    - 0.pool.ntp.org
    - 1.pool.ntp.org
    - 2.pool.ntp.org
    - 3.pool.ntp.org
    - cn.pool.ntp.org
    - 0.cn.pool.ntp.org
    - 1.cn.pool.ntp.org
    - 2.cn.pool.ntp.org
    - 3.cn.pool.ntp.org
  ## Additional offset added to values returned by NTP.getTime():
  testNtpOffset: null
  ## The number of consecutive empty addresses required before treating a wallet's transaction set as complete:
  gapLimit: 24
  ## How many wallet keys to generate when using bitcoinj as the blockchain interface (e.g. when sending coins):
  bitcoinjLookaheadSize: 50
  ## Data storage enabled/disabled:
  qdnEnabled: true
  ## Data storage path.:
  dataPath: data
  ## Data storage path (for temporary data). Defaults to {dataPath}/_temp:
  tempDataPath: data/_temp
  ## Storage policy to indicate which data should be hosted:
  storagePolicy: FOLLOWED_OR_VIEWED
  ## Whether to allow data outside of the storage policy to be relayed between other peers:
  relayModeEnabled: true
  ## Whether to remember which data was originally uploaded using this node.:
  ## This prevents auto deletion of own files when storage limits are reached.:
  originalCopyIndicatorFileEnabled: true
  ## Whether to make connections directly with peers that have the required data:
  directDataRetrievalEnabled: true
  ## Expiry time (ms) for (unencrypted) built/cached data:
  builtDataExpiryInterval: 2592000000 # 30 days
  ## Whether to validate every layer when building arbitrary data, or just the final laye:
  validateAllDataLayers: false
  ## Whether to allow public (decryptable) data to be stored:
  publicDataEnabled: true
  ## Whether to allow private (non-decryptable) data to be stored:
  privateDataEnabled: false
  ## Maximum total size of hosted data, in bytes. Unlimited if null:
  maxStorageCapacity: null
  ## Whether to serve QDN data without authentication:
  qdnAuthBypassEnabled: true
  
  # EXCLUDEES:
  ## First stuff:
  ## MAINNET_LISTEN_PORT: 12392 # int
  ## ## First stuff:
  ## TESTNET_LISTEN_PORT: 62392 # int
  ## ## First stuff:
  ## MAINNET_API_PORT: 12391 # int
  ## ## First stuff:
  ## TESTNET_API_PORT: 62391 # int
  ## ## First stuff:
  ## MAINNET_DOMAIN_MAP_PORT: 80 # int
  ## ## First stuff:
  ## TESTNET_DOMAIN_MAP_PORT: 8080 # int
  ## ## First stuff:
  ## MAINNET_GATEWAY_PORT: 80 # int
  ## ## First stuff:
  ## TESTNET_GATEWAY_PORT: 8080 # int
  ## ## First stuff:
  ## SETTINGS_FILENAME: settings.json # String
  ## ## Properties:
  ## instance: null # Settings
  ## ## API-related:
  ## apiWhitelistEnabled: true # boolean
  ## ## Which blockchains this node is running:
  ## bitcoinNet: BitcoinNet.MAIN # BitcoinNet
  ## ## Which blockchains this node is running:
  ## litecoinNet: LitecoinNet.MAIN # LitecoinNet
  ## ## Which blockchains this node is running:
  ## dogecoinNet: DogecoinNet.MAIN # DogecoinNet
  ## ## Which blockchains this node is running:
  ## digibyteNet: DigibyteNet.MAIN # DigibyteNet
  ## ## Which blockchains this node is running:
  ## ravencoinNet: RavencoinNet.MAIN # RavencoinNet
  ## ## Which blockchains this node is running:
  ## pirateChainNet: PirateChainNet.MAIN # PirateChainNet